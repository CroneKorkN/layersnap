#!/bin/bash

ls_status() {
  if [ -d "$PoolDir" ]; then
    echo "$TargetDir is layersnapped!"
  else
    echo "$TargetDir is not layersnapped."
  fi
}

#
# move TargetDir into generic initial SnapshotDir "0" und symlink it
#

ls_prepare() {
  # DEFINE
  GenericSnapshotDir="$PoolDir/0"
  GenericSnapshotMergeDir="$GenericSnapshotDir/merge"
  
  # WORK
  mkdir -p "$GenericSnapshotDir"
  mv "$TargetDir" "$GenericSnapshotMergeDir"
  ln -s "$GenericSnapshotMergeDir" "$TargetDir"
}

#
# create new snapshot-layer 
#

ls_snapshot() {
  # DEFINE
  Now=$(date +"%Y-%m-%d_%H:%M")
  SnapshotDir="$PoolDir/$Now"
  
  UpperDir="$SnapshotDir/upper"
  LowerDir="$SnapshotDir/lower"
  WorkDir="$SnapshotDir/work"
  MergeDir="$SnapshotDir/merge"
  
  # prepare target for snapshot first?
  if [ ! -d "$PoolDir" ]; then
    ls_prepare
  fi

  # locate previous snapshot
  Previous=ls -1 | sort -r | head --lines=1
  PreviousMergeDir="$PoolDir/$Previous/merge"

  # WORK

  # create directories
  mkdir "$SnapshotDir"
  mkdir "$UpperDir"
  mkdir "$WorkDir"
  mkdir "$MergeDir"

  # lowerdir is symlinked to previous snapshot mergedir
  ln -s "$PreviousMergeDir" "$LowerDir"
  
  mount -t overlay overlay -olowerdir="$LowerDir",upperdir="$UpperDir",workdir="$WorkDir" "$MergeDir"
  
  # let target point to new mergedir
  ln -s "$MergeDir" "$TargetDir"
}

#
# merge with previous layer
#

ls_merge() {
  umount "$TargetDir"
  rm -R "$TargetDir"

  rsync -av "$UpperDir/"* "$LowerDir"
  mv "$LowerDir" "$TargetDir"
  
  rm -R "$PoolDir"
}

#
# restore layer
#

ls_restore() {
    rm "$TargetDir"
    umount "$MergeDir"
    rm -R "$MergeDir"
    
    rm -R "$WorkDir"
    rm -R "$UpperDir"

    mv "$LowerDir" "$TargetDir"
    rm -R "$PoolDir"
}
